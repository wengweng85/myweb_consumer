<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:cache="http://www.springframework.org/schema/cache"
    xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
    xmlns:aop="http://www.springframework.org/schema/aop"  
    xsi:schemaLocation="http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd  
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/tx 
	    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/cache 
        http://www.springframework.org/schema/cache/spring-cache.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
        http://code.alibabatech.com/schema/dubbo 
	    http://code.alibabatech.com/schema/dubbo/dubbo.xsd
        "> 

     <!-- 扫描dubbo注解 -->
     <dubbo:annotation package="com.insigma.mvc.controller" />
      
     <!-- 自动扫描的包名 -->
     <context:component-scan base-package="com.insigma.mvc.controller" />
     <!-- 默认的注解映射的支持 -->
     <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
                <property name="objectMapper" ref="myCustomObjectMapper"></property>
            </bean>
        </mvc:message-converters>
     </mvc:annotation-driven>
	 <!-- 对静态资源文件的访问  方案一 （二选一） -->
     <!--
	 <mvc:resources mapping="/resource/**" location="/resource/"/>
	 -->
 	 <mvc:default-servlet-handler/>


      <!-- 配置Token拦截器，防止用户重复提交数据 -->

     <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**" />
            <bean class="com.insigma.common.interceptor.ContextPathInterceptor" />
        </mvc:interceptor>
     </mvc:interceptors>
      
     <!-- ViewResolver velocity 视图解析器 -->
     <!--<bean class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
        <property name="contentType" value="text/html;charset=UTF-8" />
        <property name="suffix" value=".html" />
        <property name="order" value="0"/>
     </bean>-->

     <!-- ViewResolver freemarker视图解析器 -->
     <bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"/>
        <property name="suffix" value=".ftl" />
        <property name="cache" value="true" />
        <property name="contentType" value="text/html;charset=UTF-8" />
        <property name="exposeSpringMacroHelpers" value="true"/>
        <property name="exposeRequestAttributes" value="true"/>
        <property name="exposeSessionAttributes" value="true"/>
        <property name="requestContextAttribute" value="rc" />
        <property name="order" value="1"/>
		<property name="attributes" ref="modulesMap" />
     </bean>

    <!-- ViewResolver 默认配置 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/page/"/>
        <property name="suffix" value=".jsp"/>
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
        <property name="contentType" value="text/html;charset=UTF-8" />
        <property name="order" value="2"/>
    </bean>

     <!-- 事务注解-->
	 <tx:annotation-driven transaction-manager="transactionManager" />

     <tx:annotation-driven transaction-manager="jdbctemplteTransactionManager" />

     <tx:annotation-driven transaction-manager="sqlliteTransactionManager" />

     <!--mvc统一异常处理-->
     <bean id="exceptionResolver" class="com.insigma.resolver.MyCustomSimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <!--<prop key="com.insigma.resolver.SystemException">error/500</prop>
                <prop key="com.insigma.resolver.AppException">error/errorpage</prop>-->
                <prop key="java.lang.exception">error/errorpage</prop>
                <prop key="org.apache.shiro.authz.AuthorizationException">redirect:/index</prop>
            </props>
        </property>
    </bean>

    <!-- SpringMVC上传文件时，需要配置MultipartResolver处理器 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>

    <!-- Support Shiro Annotation -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!-- Enable Shiro Annotations for Spring-configured beans.  Only run after
         the lifecycleBeanProcessor has run: -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor"/>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
    
    
    <!-- 启动对@AspectJ注解的支持 --> 
    <!-- proxy-target-class等于true是强制使用cglib代理，proxy-target-class默认是false，如果你的类实现了接口 就走JDK代理，如果没有，走cglib代理  -->
    <!-- 注：对于单利模式建议使用cglib代理，虽然JDK动态代理比cglib代理速度快，但性能不如cglib -->

    <!--如果不写proxy-target-class="true"这句话也没问题-->
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <bean id="systemLogAspect" class="com.insigma.mvc.component.log.SystemLogAspect"></bean>
	
</beans> 
